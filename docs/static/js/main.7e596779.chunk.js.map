{"version":3,"sources":["helpers/conectApiListAll.js","components/SearchBreed.js","hooks/useFetchListBreed.js","helpers/conectWithApi.js","components/BreedGrid.js","hooks/useFetchBreed.js","DogFinder.js","index.js"],"names":["conectApiListAll","a","fetch","resp","json","breeds","SearchBreed","setBreed","useState","inputValue","setInputValue","data","loading","state","setState","useEffect","then","message","status","useFetchListBreed","nombresRazas","key","push","nuevaPerros","k","indexOf","scroll","window","top","behavior","escoger","e","target","innerHTML","nuevaPerrosSI","map","perro","className","onClick","length","Math","random","onSubmit","preventDefault","type","placeholder","value","onChange","conectApi","breed","url","encodeURI","datos","BreedGrid","imagenes","useFetchBreed","images","img","src","alt","setTimeout","document","location","reload","DogFinder","loop","autoPlay","muted","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7e596779.chunk.js","sourcesContent":["\r\n\r\nexport const conectApiListAll = async ()=>{\r\n\r\n    const url = `https://dog.ceo/api/breeds/list/all`;\r\n    const resp = await fetch(url);\r\n    const breeds = await resp.json();\r\n\r\n    \r\n\r\n    return breeds\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { useFetchListBreed } from '../hooks/useFetchListBreed';\r\n\r\n\r\n\r\nconst SearchBreed = ({setBreed}) =>{\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const {data: breeds, loading} = useFetchListBreed();\r\n\r\n\r\n    let nombresRazas = []\r\n    for (const key in breeds) {\r\n        nombresRazas.push(key);\r\n      \r\n    }\r\n \r\n   \r\n    const handleSubmit = (e) =>{\r\n        \r\n        setBreed([inputValue])\r\n        e.preventDefault();\r\n        scroll();\r\n    }\r\n    const handleInput = (e) =>{\r\n        setInputValue(e.target.value)\r\n        \r\n    }\r\n    \r\n        const nuevaPerros=[]\r\n  \r\n        for( const k in nombresRazas){\r\n            if(inputValue !== ''){\r\n                if (nombresRazas[k].indexOf(inputValue) !== -1) {\r\n                    \r\n                    nuevaPerros.push(nombresRazas[k])      \r\n               \r\n                 }\r\n            }  \r\n        }\r\n\r\n        const scroll = ()=>{\r\n            window.scroll({\r\n                top: 700,\r\n                behavior: 'smooth'\r\n              });\r\n\r\n        }\r\n        // const [chose, setchose] = useState()\r\n        const escoger = (e)=>{\r\n            \r\n              \r\n               setInputValue( e.target.innerHTML)\r\n               \r\n            \r\n            \r\n        }\r\n        \r\n       \r\n        let nuevaPerrosSI = nuevaPerros.map(perro=>{\r\n            \r\n            return(<div className='RazasSugeridas'  onClick={escoger} key={nuevaPerros.length * Math.random(159)} >{perro}</div>)\r\n        })\r\n\r\n         \r\n    \r\n    return(\r\n        <>\r\n        \r\n        <form onSubmit={handleSubmit }>\r\n            <input type='text'\r\n            placeholder = 'ej. akita'\r\n            value={inputValue}\r\n            onChange ={handleInput}\r\n            \r\n            />\r\n            <button className='buscar'>Buscar</button>\r\n        </form>\r\n        \r\n       <div className='contentRazas'>\r\n        \r\n       {nuevaPerrosSI}\r\n       </div>\r\n       \r\n\r\n          \r\n        \r\n      \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBreed;","import { conectApiListAll } from \"../helpers/conectApiListAll\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nexport const useFetchListBreed = () =>{\r\n\r\n\r\n    const [ state, setState] = useState({\r\n        data:[],\r\n        loading: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        conectApiListAll()\r\n        .then(({message, status})=>{\r\n            setState({\r\n                data: message,\r\n                loading: status\r\n            })\r\n          \r\n        });\r\n\r\n        \r\n    }, [])\r\n\r\n\r\n    return state;\r\n}","\r\n\r\n\r\nexport const conectApi = async( breed )=>{\r\n    \r\n    // const url = `https://dog.ceo/api/breed/african/images`;\r\n    const url = `https://dog.ceo/api/breed/${ encodeURI(breed) }/images`;\r\n    \r\n    const resp = await fetch(url);\r\n    const datos = await resp.json();\r\n    \r\n   \r\n  \r\n    return datos\r\n        \r\n    \r\n    \r\n}","import React from 'react';\r\nimport { useFetchBreed } from '../hooks/useFetchBreed';\r\n\r\n\r\nconst BreedGrid = ({breed}) =>{\r\n\r\n    const {data: images, loading} = useFetchBreed(breed);\r\n\r\nlet imagenes;\r\n   if (loading === 'success') {\r\n        imagenes =  <div className='ContentImagenes'>\r\n       {images.map(img=>{\r\n           return(<img className='Imagenes' key={images.length * Math.random(115)} src={img} alt={breed}/>)\r\n           \r\n       })}\r\n       </div> \r\n   }\r\n       \r\n   if (loading === 'error') {\r\n       imagenes = <div className='ErrorNohay'>\r\n                    \r\n                <h1 className='ErrorH1' >Lo sentimos no encontramos esa raza....!</h1>\r\n                \r\n                    </div>\r\n\r\n        setTimeout(() => {\r\n            document.location.reload();\r\n        }, 2000);\r\n   }\r\n\r\n\r\n    return(\r\n        <>\r\n            {imagenes}   \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default BreedGrid;","import {useState, useEffect} from 'react';\r\nimport { conectApi } from '../helpers/conectWithApi';\r\n\r\n\r\nexport const useFetchBreed = (breed) =>{\r\n\r\n\r\n    const [ state, setState] = useState({\r\n        data:[],\r\n        loading: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        conectApi(breed)\r\n        .then(({message, status})=>{\r\n            setState({\r\n                data: message,\r\n                loading: status\r\n            })\r\n          \r\n        });\r\n\r\n        \r\n    }, [breed])\r\n\r\n\r\n    return state;\r\n}","import React, {useState}  from 'react';\r\nimport SearchBreed from './components/SearchBreed';\r\nimport BreedGrid from './components/BreedGrid';\r\n\r\n\r\n\r\n\r\nconst DogFinder =()=>{\r\n\r\n    const [breed, setBreed] = useState(['akita'])\r\n\r\n   \r\n       \r\n   \r\n    return(\r\n        <>\r\n        \r\n        <div className= 'ContentVideo'>\r\n            <video loop autoPlay muted  className=\"myVideo\">\r\n                <source src=\"./pets.mp4\"  type=\"video/mp4\" />\r\n       \r\n                </video>\r\n        \r\n            <div className='PrincipalWithInput'>\r\n            <h1 className='PrincipalWithInputH1'> Search the breed </h1>\r\n            <SearchBreed setBreed={setBreed} />\r\n            \r\n             </div>\r\n        \r\n        </div>\r\n       \r\n        \r\n        \r\n        \r\n       \r\n\r\n       \r\n            \r\n       \r\n        <BreedGrid breed={breed} />\r\n \r\n        </>\r\n        )\r\n}\r\n\r\n\r\nexport default DogFinder","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DogFinder from './DogFinder';\n\n\nReactDOM.render(<DogFinder />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}